{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import './BodyPage.css';\n// import Header from './header/header';\n// import CheckoutPage from './checkoutpage/checkoutpage';\n// import EditIcon from '@mui/icons-material/Edit';\n// import DeleteIcon from '@mui/icons-material/Delete'; // Import the delete icon\n// import AddIcon from '@mui/icons-material/Add'; // Import the add icon\n\n// const BodyPage1 = () => {\n//   const [cartItems, setCartItems] = useState([]);\n//   const [isCartOpen, setIsCartOpen] = useState(false);\n//   const [selectedCategory, setSelectedCategory] = useState('');\n//   const [selectedArtist, setSelectedArtist] = useState('');\n//   const [products, setProducts] = useState([]);\n//   const [showCondition, setShowCondition] = useState(null);\n//   const [editProductId, setEditProductId] = useState(null);\n//   const [editPrice, setEditPrice] = useState('');\n//   const [editCondition, setEditCondition] = useState('');\n//   const [showForm, setShowForm] = useState(false); // State to control the visibility of the form\n//   const [formData, setFormData] = useState({\n//     artist: '',\n//     art_id: '',\n//     art_images: '',\n//     price: '',\n//     location: '',\n//     title: '',\n//     creation_year: '',\n//     signed: '',\n//     condition: '',\n//     category: '',\n//     movement: ''\n//   });\n\n//   useEffect(() => {\n//     if (selectedCategory) {\n//       fetchProducts(selectedCategory);\n//     }\n//   }, [selectedCategory]);\n\n//   const fetchProducts = async (category) => {\n//     try {\n//       const response = await fetch(`http://127.0.0.1:8000/search_by_category?category=${category}`);\n//       if (!response.ok) {\n//         throw new Error('Failed to fetch products');\n//       }\n//       const data = await response.json();\n//       const artworksArray = Object.values(data.artworks);\n//       setProducts(artworksArray);\n//     } catch (error) {\n//       console.error('Error fetching products:', error.message);\n//     }\n//   };\n\n//   const handleCategoryChange = (category) => {\n//     setSelectedCategory(category);\n//   };\n\n//   const handleArtistChange = async (artist) => {\n//     try {\n//       const response = await fetch(`http://127.0.0.1:8000/search_by_artist?artist=${artist}`);\n//       if (!response.ok) {\n//         throw new Error('Failed to fetch products');\n//       }\n//       const data = await response.json();\n//       const artworksArray = Object.values(data.artworks);\n//       setProducts(artworksArray);\n//     } catch (error) {\n//       console.error('Error fetching products:', error.message);\n//     }\n//   };\n\n//   const addToCart = (product) => {\n//     const existingItem = cartItems.find((item) => item._id === product._id);\n\n//     if (existingItem) {\n//       const updatedCartItems = cartItems.map((item) =>\n//         item._id === product._id ? { ...item, quantity: item.quantity + 1 } : item\n//       );\n//       setCartItems(updatedCartItems);\n//     } else {\n//       setCartItems([...cartItems, { ...product, quantity: 1 }]);\n//     }\n//   };\n\n//   const toggleCart = () => {\n//     setIsCartOpen((prevState) => !prevState);\n//   };\n\n//   const handleImageClick = (productId) => {\n//     setShowCondition(productId);\n//   };\n\n//   const handleCloseCondition = () => {\n//     setShowCondition(null);\n//   };\n\n//   const handleEditClick = (productId, initialPrice, initialCondition) => {\n//     setEditProductId(productId);\n//     setEditPrice(initialPrice);\n//     setEditCondition(initialCondition);\n//   };\n\n//   const handleEditCancel = () => {\n//     setEditProductId(null);\n//     setEditPrice('');\n//     setEditCondition('');\n//   };\n\n//   const handleEditSubmit = async () => {\n//     try {\n//       const response = await fetch('http://127.0.0.1:8000/update_artwork', {\n//         method: 'PUT',\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify({\n//           art_id: editProductId,\n//           new_price: editPrice,\n//           new_condition: editCondition\n//         })\n//       });\n\n//       if (!response.ok) {\n//         throw new Error('Failed to update artwork');\n//       }\n\n//       // Update the products array with the edited data\n//       const updatedProducts = products.map(product => {\n//         if (product.ArtID === editProductId) {\n//           return {\n//             ...product,\n//             Price: editPrice, // Update the price\n//             Condition: editCondition // Update the condition\n//           };\n//         }\n//         return product;\n//       });\n\n//       setProducts(updatedProducts);\n\n//       const data = await response.json();\n//       console.log(data); // Logging the response from the server\n//       setEditProductId(null);\n//       setEditPrice('');\n//       setEditCondition('');\n//     } catch (error) {\n//       console.error('Error updating artwork:', error.message);\n//     }\n//   };\n\n//   const handleDeleteProduct = async (productId) => {\n//     try {\n//       const response = await fetch(`http://127.0.0.1:8000/delete_artwork?art_id=${productId}`, {\n//         method: 'DELETE'\n//       });\n\n//       if (!response.ok) {\n//         throw new Error('Failed to delete product');\n//       }\n\n//       const data = await response.json();\n//       console.log(data.message); // Log the response message from the server\n\n//       // Filter out the deleted product from the products array\n//       const updatedProducts = products.filter(product => product.ArtID !== productId);\n//       setProducts(updatedProducts);\n//     } catch (error) {\n//       console.error('Error deleting product:', error.message);\n//     }\n//   };\n\n//   const handleInsertDocument = () => {\n//     // Show the form when the add icon is clicked\n//     setShowForm(true);\n//   };\n\n//   const handleFormChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData(prevState => ({\n//       ...prevState,\n//       [name]: value\n//     }));\n//   };\n\n//   const handleFormSubmit = async (e) => {\n//     e.preventDefault(); // Prevent default form submission\n\n//     try {\n//       const response = await fetch('http://127.0.0.1:8000/insert_document', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify(formData), // Use formData from state\n//       });\n\n//       if (!response.ok) {\n//         throw new Error('Failed to insert document');\n//       }\n\n//       const data = await response.json();\n//       console.log(data); // Log the response from the server\n\n//       // Optionally, reset the form data and hide the form after successful submission\n//       setFormData({\n//         artist: '',\n//         art_id: '',\n//         art_images: '',\n//         price: '',\n//         location: '',\n//         title: '',\n//         creation_year: '',\n//         signed: '',\n//         condition: '',\n//         category: '',\n//         movement: ''\n//       });\n//       setShowForm(false);\n//     } catch (error) {\n//       console.error('Error inserting document:', error.message);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <Header\n//         headName=\"SignOut\"\n//         cartCount={cartItems.length}\n//         toggleCart={toggleCart}\n//         onCategoryChange={handleCategoryChange}\n//         onArtistChange={handleArtistChange}\n//       />\n//       <div className=\"body-page\">\n//         <div className=\"product-grid\">\n//           {products.map((product) => (\n//             <div key={product._id} className=\"product-card\">\n//               <img\n//                 src={product.ArtImages}\n//                 alt={product.Artist}\n//                 className=\"product-image\"\n//                 style={{ width: '200px', height: '200px' }}\n//                 onClick={() => handleImageClick(product._id)}\n//               />\n//               <div className=\"product-info\">\n//               <div className=\"product-name\" style={{fontWeight:\"bold\"}}>{product.Title}</div>\n//                 <div className=\"product-title\">{product.Artist}</div>\n//                 <div className=\"product-price\">{product.Price}</div>\n//                 {showCondition === product._id && (\n//                   <div className=\"product-condition\">\n//                     <h3>Condition:</h3>\n//                     <p>{product.Condition}</p>\n//                     <button onClick={handleCloseCondition} style={{ background: '#ff9900', color: 'white' }}>\n//                       Close\n//                     </button>\n//                   </div>\n//                 )}\n//                 {editProductId === product.ArtID ? (\n//                   <div>\n//                     <input\n//                       type=\"text\"\n//                       value={editPrice}\n//                       onChange={(e) => setEditPrice(e.target.value)}\n//                       placeholder=\"Enter new price\"\n//                     />\n//                     <input\n//                       type=\"text\"\n//                       value={editCondition}\n//                       onChange={(e) => setEditCondition(e.target.value)}\n//                       placeholder=\"Enter new condition\"\n//                     />\n//                     <button onClick={handleEditSubmit}>Submit</button>\n//                     <button onClick={handleEditCancel}>Cancel</button>\n//                   </div>\n//                 ) : (\n//                   <>\n//                     <EditIcon\n//                       style={{ marginRight: '10px', cursor: 'pointer', color: '#ff9900' }}\n//                       onClick={() => handleEditClick(product.ArtID, product.Price, product.Condition)}\n//                     />\n//                     <DeleteIcon\n//                       style={{ cursor: 'pointer', color: '#ff9900' }}\n//                       onClick={() => handleDeleteProduct(product.ArtID)}\n//                     />\n//                   </>\n//                 )}\n//                 <button\n//                   className=\"add-to-cart-button\"\n//                   onClick={() => addToCart(product)}\n//                 >\n//                   Add to Cart\n//                 </button>\n//               </div>\n//             </div>\n//           ))}\n//           {showForm ? (\n//             <div className=\"product-card\">\n//               {/* Your form component goes here */}\n//               <form onSubmit={handleFormSubmit}>\n//                 <input\n//                   type=\"text\"\n//                   name=\"artist\"\n//                   value={formData.artist}\n//                   onChange={handleFormChange}\n//                   placeholder=\"Artist\"\n//                 />\n//                 <input\n//                   type=\"text\"\n//                   name=\"art_id\"\n//                   value={formData.art_id}\n//                   onChange={handleFormChange}\n//                   placeholder=\"Art ID\"\n//                 />\n//                 <input\n//                   type=\"text\"\n//                   name=\"art_images\"\n//                   value={formData.art_images}\n//                   onChange={handleFormChange}\n//                   placeholder=\"Art Images\"\n//                 />\n//                 <input\n//                   type=\"text\"\n//                   name=\"price\"\n//                   value={formData.price}\n//                   onChange={handleFormChange}\n//                   placeholder=\"Price\"\n//                 />\n//                 <input\n//                   type=\"text\"\n//                   name=\"location\"\n//                   value={formData.location}\n//                   onChange={handleFormChange}\n//                   placeholder=\"Location\"\n//                 />\n//                 <input\n//                   type=\"text\"\n//                   name=\"title\"\n//                   value={formData.title}\n//                   onChange={handleFormChange}\n//                   placeholder=\"Title\"\n//                 />\n//                 <input\n//                   type=\"text\"\n//                   name=\"creation_year\"\n//                   value={formData.creation_year}\n//                   onChange={handleFormChange}\n//                   placeholder=\"Creation Year\"\n//                 />\n//                 <input\n//                   type=\"text\"\n//                   name=\"signed\"\n//                   value={formData.signed}\n//                   onChange={handleFormChange}\n//                   placeholder=\"Signed\"\n//                 />\n//                 <input\n//                   type=\"text\"\n//                   name=\"condition\"\n//                   value={formData.condition}\n//                   onChange={handleFormChange}\n//                   placeholder=\"Condition\"\n//                 />\n//                 <input\n//                   type=\"text\"\n//                   name=\"category\"\n//                   value={formData.category}\n//                   onChange={handleFormChange}\n//                   placeholder=\"Category\"\n//                 />\n//                 <input\n//                   type=\"text\"\n//                   name=\"movement\"\n//                   value={formData.movement}\n//                   onChange={handleFormChange}\n//                   placeholder=\"Movement\"\n//                 />\n//                 <button type=\"submit\">Submit</button>\n//               </form>\n//             </div>\n//           ) : (\n//             <div className=\"product-card\" onClick={handleInsertDocument}>\n//               <AddIcon style={{ width: '100px', height: '100px', cursor: 'pointer' }} />\n//             </div>\n//           )}\n//         </div>\n//       </div>\n//       {isCartOpen && <CheckoutPage cartItems={cartItems} />}\n//     </div>\n//   );\n// };\n\n// export default BodyPage1;","map":{"version":3,"names":[],"sources":["/Users/nithyashree/Desktop/ARTISAN/ArtisanClub/src/bodyadmin.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import './BodyPage.css';\n// import Header from './header/header';\n// import CheckoutPage from './checkoutpage/checkoutpage';\n// import EditIcon from '@mui/icons-material/Edit';\n// import DeleteIcon from '@mui/icons-material/Delete'; // Import the delete icon\n// import AddIcon from '@mui/icons-material/Add'; // Import the add icon\n\n// const BodyPage1 = () => {\n//   const [cartItems, setCartItems] = useState([]);\n//   const [isCartOpen, setIsCartOpen] = useState(false);\n//   const [selectedCategory, setSelectedCategory] = useState('');\n//   const [selectedArtist, setSelectedArtist] = useState('');\n//   const [products, setProducts] = useState([]);\n//   const [showCondition, setShowCondition] = useState(null);\n//   const [editProductId, setEditProductId] = useState(null);\n//   const [editPrice, setEditPrice] = useState('');\n//   const [editCondition, setEditCondition] = useState('');\n//   const [showForm, setShowForm] = useState(false); // State to control the visibility of the form\n//   const [formData, setFormData] = useState({\n//     artist: '',\n//     art_id: '',\n//     art_images: '',\n//     price: '',\n//     location: '',\n//     title: '',\n//     creation_year: '',\n//     signed: '',\n//     condition: '',\n//     category: '',\n//     movement: ''\n//   });\n\n//   useEffect(() => {\n//     if (selectedCategory) {\n//       fetchProducts(selectedCategory);\n//     }\n//   }, [selectedCategory]);\n\n//   const fetchProducts = async (category) => {\n//     try {\n//       const response = await fetch(`http://127.0.0.1:8000/search_by_category?category=${category}`);\n//       if (!response.ok) {\n//         throw new Error('Failed to fetch products');\n//       }\n//       const data = await response.json();\n//       const artworksArray = Object.values(data.artworks);\n//       setProducts(artworksArray);\n//     } catch (error) {\n//       console.error('Error fetching products:', error.message);\n//     }\n//   };\n\n//   const handleCategoryChange = (category) => {\n//     setSelectedCategory(category);\n//   };\n\n//   const handleArtistChange = async (artist) => {\n//     try {\n//       const response = await fetch(`http://127.0.0.1:8000/search_by_artist?artist=${artist}`);\n//       if (!response.ok) {\n//         throw new Error('Failed to fetch products');\n//       }\n//       const data = await response.json();\n//       const artworksArray = Object.values(data.artworks);\n//       setProducts(artworksArray);\n//     } catch (error) {\n//       console.error('Error fetching products:', error.message);\n//     }\n//   };\n\n//   const addToCart = (product) => {\n//     const existingItem = cartItems.find((item) => item._id === product._id);\n\n//     if (existingItem) {\n//       const updatedCartItems = cartItems.map((item) =>\n//         item._id === product._id ? { ...item, quantity: item.quantity + 1 } : item\n//       );\n//       setCartItems(updatedCartItems);\n//     } else {\n//       setCartItems([...cartItems, { ...product, quantity: 1 }]);\n//     }\n//   };\n\n//   const toggleCart = () => {\n//     setIsCartOpen((prevState) => !prevState);\n//   };\n\n//   const handleImageClick = (productId) => {\n//     setShowCondition(productId);\n//   };\n\n//   const handleCloseCondition = () => {\n//     setShowCondition(null);\n//   };\n\n//   const handleEditClick = (productId, initialPrice, initialCondition) => {\n//     setEditProductId(productId);\n//     setEditPrice(initialPrice);\n//     setEditCondition(initialCondition);\n//   };\n\n//   const handleEditCancel = () => {\n//     setEditProductId(null);\n//     setEditPrice('');\n//     setEditCondition('');\n//   };\n\n//   const handleEditSubmit = async () => {\n//     try {\n//       const response = await fetch('http://127.0.0.1:8000/update_artwork', {\n//         method: 'PUT',\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify({\n//           art_id: editProductId,\n//           new_price: editPrice,\n//           new_condition: editCondition\n//         })\n//       });\n  \n//       if (!response.ok) {\n//         throw new Error('Failed to update artwork');\n//       }\n  \n//       // Update the products array with the edited data\n//       const updatedProducts = products.map(product => {\n//         if (product.ArtID === editProductId) {\n//           return {\n//             ...product,\n//             Price: editPrice, // Update the price\n//             Condition: editCondition // Update the condition\n//           };\n//         }\n//         return product;\n//       });\n  \n//       setProducts(updatedProducts);\n  \n//       const data = await response.json();\n//       console.log(data); // Logging the response from the server\n//       setEditProductId(null);\n//       setEditPrice('');\n//       setEditCondition('');\n//     } catch (error) {\n//       console.error('Error updating artwork:', error.message);\n//     }\n//   };\n\n//   const handleDeleteProduct = async (productId) => {\n//     try {\n//       const response = await fetch(`http://127.0.0.1:8000/delete_artwork?art_id=${productId}`, {\n//         method: 'DELETE'\n//       });\n  \n//       if (!response.ok) {\n//         throw new Error('Failed to delete product');\n//       }\n  \n//       const data = await response.json();\n//       console.log(data.message); // Log the response message from the server\n  \n//       // Filter out the deleted product from the products array\n//       const updatedProducts = products.filter(product => product.ArtID !== productId);\n//       setProducts(updatedProducts);\n//     } catch (error) {\n//       console.error('Error deleting product:', error.message);\n//     }\n//   };\n\n//   const handleInsertDocument = () => {\n//     // Show the form when the add icon is clicked\n//     setShowForm(true);\n//   };\n\n//   const handleFormChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData(prevState => ({\n//       ...prevState,\n//       [name]: value\n//     }));\n//   };\n\n//   const handleFormSubmit = async (e) => {\n//     e.preventDefault(); // Prevent default form submission\n    \n//     try {\n//       const response = await fetch('http://127.0.0.1:8000/insert_document', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify(formData), // Use formData from state\n//       });\n  \n//       if (!response.ok) {\n//         throw new Error('Failed to insert document');\n//       }\n  \n//       const data = await response.json();\n//       console.log(data); // Log the response from the server\n  \n//       // Optionally, reset the form data and hide the form after successful submission\n//       setFormData({\n//         artist: '',\n//         art_id: '',\n//         art_images: '',\n//         price: '',\n//         location: '',\n//         title: '',\n//         creation_year: '',\n//         signed: '',\n//         condition: '',\n//         category: '',\n//         movement: ''\n//       });\n//       setShowForm(false);\n//     } catch (error) {\n//       console.error('Error inserting document:', error.message);\n//     }\n//   };\n  \n  \n\n//   return (\n//     <div>\n//       <Header\n//         headName=\"SignOut\"\n//         cartCount={cartItems.length}\n//         toggleCart={toggleCart}\n//         onCategoryChange={handleCategoryChange}\n//         onArtistChange={handleArtistChange}\n//       />\n//       <div className=\"body-page\">\n//         <div className=\"product-grid\">\n//           {products.map((product) => (\n//             <div key={product._id} className=\"product-card\">\n//               <img\n//                 src={product.ArtImages}\n//                 alt={product.Artist}\n//                 className=\"product-image\"\n//                 style={{ width: '200px', height: '200px' }}\n//                 onClick={() => handleImageClick(product._id)}\n//               />\n//               <div className=\"product-info\">\n//               <div className=\"product-name\" style={{fontWeight:\"bold\"}}>{product.Title}</div>\n//                 <div className=\"product-title\">{product.Artist}</div>\n//                 <div className=\"product-price\">{product.Price}</div>\n//                 {showCondition === product._id && (\n//                   <div className=\"product-condition\">\n//                     <h3>Condition:</h3>\n//                     <p>{product.Condition}</p>\n//                     <button onClick={handleCloseCondition} style={{ background: '#ff9900', color: 'white' }}>\n//                       Close\n//                     </button>\n//                   </div>\n//                 )}\n//                 {editProductId === product.ArtID ? (\n//                   <div>\n//                     <input\n//                       type=\"text\"\n//                       value={editPrice}\n//                       onChange={(e) => setEditPrice(e.target.value)}\n//                       placeholder=\"Enter new price\"\n//                     />\n//                     <input\n//                       type=\"text\"\n//                       value={editCondition}\n//                       onChange={(e) => setEditCondition(e.target.value)}\n//                       placeholder=\"Enter new condition\"\n//                     />\n//                     <button onClick={handleEditSubmit}>Submit</button>\n//                     <button onClick={handleEditCancel}>Cancel</button>\n//                   </div>\n//                 ) : (\n//                   <>\n//                     <EditIcon\n//                       style={{ marginRight: '10px', cursor: 'pointer', color: '#ff9900' }}\n//                       onClick={() => handleEditClick(product.ArtID, product.Price, product.Condition)}\n//                     />\n//                     <DeleteIcon\n//                       style={{ cursor: 'pointer', color: '#ff9900' }}\n//                       onClick={() => handleDeleteProduct(product.ArtID)}\n//                     />\n//                   </>\n//                 )}\n//                 <button\n//                   className=\"add-to-cart-button\"\n//                   onClick={() => addToCart(product)}\n//                 >\n//                   Add to Cart\n//                 </button>\n//               </div>\n//             </div>\n//           ))}\n//           {showForm ? (\n//             <div className=\"product-card\">\n//               {/* Your form component goes here */}\n//               <form onSubmit={handleFormSubmit}>\n//                 <input\n//                   type=\"text\"\n//                   name=\"artist\"\n//                   value={formData.artist}\n//                   onChange={handleFormChange}\n//                   placeholder=\"Artist\"\n//                 />\n//                 <input\n//                   type=\"text\"\n//                   name=\"art_id\"\n//                   value={formData.art_id}\n//                   onChange={handleFormChange}\n//                   placeholder=\"Art ID\"\n//                 />\n//                 <input\n//                   type=\"text\"\n//                   name=\"art_images\"\n//                   value={formData.art_images}\n//                   onChange={handleFormChange}\n//                   placeholder=\"Art Images\"\n//                 />\n//                 <input\n//                   type=\"text\"\n//                   name=\"price\"\n//                   value={formData.price}\n//                   onChange={handleFormChange}\n//                   placeholder=\"Price\"\n//                 />\n//                 <input\n//                   type=\"text\"\n//                   name=\"location\"\n//                   value={formData.location}\n//                   onChange={handleFormChange}\n//                   placeholder=\"Location\"\n//                 />\n//                 <input\n//                   type=\"text\"\n//                   name=\"title\"\n//                   value={formData.title}\n//                   onChange={handleFormChange}\n//                   placeholder=\"Title\"\n//                 />\n//                 <input\n//                   type=\"text\"\n//                   name=\"creation_year\"\n//                   value={formData.creation_year}\n//                   onChange={handleFormChange}\n//                   placeholder=\"Creation Year\"\n//                 />\n//                 <input\n//                   type=\"text\"\n//                   name=\"signed\"\n//                   value={formData.signed}\n//                   onChange={handleFormChange}\n//                   placeholder=\"Signed\"\n//                 />\n//                 <input\n//                   type=\"text\"\n//                   name=\"condition\"\n//                   value={formData.condition}\n//                   onChange={handleFormChange}\n//                   placeholder=\"Condition\"\n//                 />\n//                 <input\n//                   type=\"text\"\n//                   name=\"category\"\n//                   value={formData.category}\n//                   onChange={handleFormChange}\n//                   placeholder=\"Category\"\n//                 />\n//                 <input\n//                   type=\"text\"\n//                   name=\"movement\"\n//                   value={formData.movement}\n//                   onChange={handleFormChange}\n//                   placeholder=\"Movement\"\n//                 />\n//                 <button type=\"submit\">Submit</button>\n//               </form>\n//             </div>\n//           ) : (\n//             <div className=\"product-card\" onClick={handleInsertDocument}>\n//               <AddIcon style={{ width: '100px', height: '100px', cursor: 'pointer' }} />\n//             </div>\n//           )}\n//         </div>\n//       </div>\n//       {isCartOpen && <CheckoutPage cartItems={cartItems} />}\n//     </div>\n//   );\n// };\n\n// export default BodyPage1;\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}