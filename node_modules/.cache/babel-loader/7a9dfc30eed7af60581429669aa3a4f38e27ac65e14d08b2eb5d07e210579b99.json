{"ast":null,"code":"var _jsxFileName = \"/Users/nithyashree/Desktop/ARTISAN/ArtisanClub/src/bodyadmin.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import './BodyPage.css';\n// import Header from './header/header';\n// import CheckoutPage from './checkoutpage/checkoutpage';\n// import DeleteIcon from '@material-ui/icons/Delete';\n// import EditIcon from '@material-ui/icons/Edit';\n// import AddIcon from '@material-ui/icons/Add';\n\n// const BodyPage1 = () => {\n//   const [cartItems, setCartItems] = useState([]);\n//   const [isCartOpen, setIsCartOpen] = useState(false);\n//   const [products, setProducts] = useState([\n//     { id: 1, name: 'Product 1', price: '$10', imageUrl: 'https://via.placeholder.com/150' },\n//     { id: 2, name: 'Product 2', price: '$20', imageUrl: 'https://via.placeholder.com/150' },\n//     { id: 3, name: 'Product 3', price: '$30', imageUrl: 'https://via.placeholder.com/150' },\n//     { id: 4, name: 'Product 4', price: '$40', imageUrl: 'https://via.placeholder.com/150' },\n//     { id: 5, name: 'Product 5', price: '$50', imageUrl: 'https://via.placeholder.com/150' },\n//     { id: 6, name: 'Product 6', price: '$60', imageUrl: 'https://via.placeholder.com/150' },\n//     { id: 7, name: 'Product 7', price: '$70', imageUrl: 'https://via.placeholder.com/150' },\n//     { id: 8, name: 'Product 8', price: '$80', imageUrl: 'https://via.placeholder.com/150' },\n//     { id: 9, name: 'Product 9', price: '$90', imageUrl: 'https://via.placeholder.com/150' },\n//     { id: 10, name: 'Product 10', price: '$100', imageUrl: 'https://via.placeholder.com/150' },\n//     { id: 11, name: 'Product 10', price: '$100', imageUrl: 'https://via.placeholder.com/150' },\n//     { id: 12, name: 'Product 10', price: '$100', imageUrl: 'https://via.placeholder.com/150' },\n//   ]);\n//   const [isAddProductFormOpen, setIsAddProductFormOpen] = useState(false);\n//   const [newProduct, setNewProduct] = useState({ name: '', price: '', imageUrl: '' });\n//   const [editableProductId, setEditableProductId] = useState(null); // State to track which product is being edited\n//   const [editedProduct, setEditedProduct] = useState({ name: '', price: '', imageUrl: '' });\n\n//   const addToCart = (product) => {\n//     const existingItemIndex = cartItems.findIndex(item => item.id === product.id);\n\n//     if (existingItemIndex !== -1) {\n//       const updatedCartItems = cartItems.map((item, index) => {\n//         if (index === existingItemIndex) {\n//           return { ...item, quantity: item.quantity + 1 };\n//         }\n//         return item;\n//       });\n\n//       setCartItems(updatedCartItems);\n//     } else {\n//       setCartItems([...cartItems, { ...product, quantity: 1 }]);\n//     }\n//   };\n\n//   const removeFromCart = (productId) => {\n//     const updatedCartItems = cartItems.filter(item => item.id !== productId);\n//     setCartItems(updatedCartItems);\n//   };\n\n//   const updateCartItem = (productId, newQuantity) => {\n//     const updatedCartItems = cartItems.map(item => {\n//       if (item.id === productId) {\n//         return { ...item, quantity: newQuantity };\n//       }\n//       return item;\n//     });\n//     setCartItems(updatedCartItems);\n//   };\n\n//   const toggleCart = () => {\n//     setIsCartOpen(prevState => !prevState);\n//   };\n\n//   const addProduct = () => {\n//     setProducts([...products, { ...newProduct, id: products.length + 1 }]);\n//     setIsAddProductFormOpen(false);\n//     setNewProduct({ Art_ID:' ',name: '', price: '', imageUrl: '' });\n//   };\n\n//   const deleteProduct = (productId) => {\n//     const updatedProducts = products.filter(product => product.id !== productId);\n//     setProducts(updatedProducts);\n//   };\n\n//   const handleEditProduct = (productId) => {\n//     setEditableProductId(productId);\n//     const productToEdit = products.find(product => product.id === productId);\n//     setEditedProduct({ ...productToEdit });\n//   };\n\n//   const submitEditedProduct = () => {\n//     const updatedProducts = products.map(product => {\n//       if (product.id === editableProductId) {\n//         return { ...editedProduct };\n//       }\n//       return product;\n//     });\n//     setProducts(updatedProducts);\n//     setEditableProductId(null); // Reset editableProductId after updating the product\n//   };\n\n//   return (\n//     <div>\n//       <Header headName=\"SignOut\" cartCount={cartItems.length} toggleCart={toggleCart} />\n//       <div className=\"body-page\">\n//         <div className=\"product-grid\">\n//           {/* Plus icon to toggle add product form */}\n//           <div onClick={() => setIsAddProductFormOpen(true)}>\n//             <AddIcon />\n//             <span>Add Product</span>\n//           </div>\n\n//           {/* Add product form */}\n//           {isAddProductFormOpen && (\n//             <div className=\"add-product-modal\">\n//               <div className=\"add-product-modal-content\">\n//                 <span className=\"add-product-modal-close\" onClick={() => setIsAddProductFormOpen(false)}>&times;</span>\n//                 <h2>Add Product</h2>\n//                 <form onSubmit={addProduct}>\n//                 <input type=\"text\" value={newProduct.Art_ID} onChange={(e) => setNewProduct({ ...newProduct, Art_ID: e.target.value })} placeholder=\"Artist ID\" required />\n//                   <input type=\"text\" value={newProduct.name} onChange={(e) => setNewProduct({ ...newProduct, name: e.target.value })} placeholder=\"Product Name\" required />\n//                   <input type=\"text\" value={newProduct.price} onChange={(e) => setNewProduct({ ...newProduct, price: e.target.value })} placeholder=\"Price\" required />\n//                   <input type=\"text\" value={newProduct.imageUrl} onChange={(e) => setNewProduct({ ...newProduct, imageUrl: e.target.value })} placeholder=\"Image URL\" required />\n//                   <button type=\"submit\">Add Product</button>\n//                 </form>\n//               </div>\n//             </div>\n//           )}\n\n//           {/* Display existing products */}\n//           {products.map(product => (\n//             <div key={product.id} className=\"product-card\">\n//               <img src={product.imageUrl} alt={product.name} className=\"product-image\" />\n//               <div className=\"product-info\">\n//                 {/* Editable fields */}\n//                 {editableProductId === product.id ? (\n//                   <div>\n//                     <input type=\"text\" value={editedProduct.name} onChange={(e) => setEditedProduct({ ...editedProduct, name: e.target.value })} />\n//                     <input type=\"text\" value={editedProduct.price} onChange={(e) => setEditedProduct({ ...editedProduct, price: e.target.value })} />\n//                     <input type=\"text\" value={editedProduct.imageUrl} onChange={(e) => setEditedProduct({ ...editedProduct, imageUrl: e.target.value })} />\n//                     <button onClick={submitEditedProduct}>Submit</button>\n//                   </div>\n//                 ) : (\n//                   <div>\n//                     <div className=\"product-name\">{product.name}</div>\n//                     <div className=\"product-price\">{product.price}</div>\n//                   </div>\n//                 )}\n//                 <button className=\"add-to-cart-button\" onClick={() => addToCart(product)}>\n//                   <AddIcon /> Add to Cart\n//                 </button>\n//                 {/* Admin functionalities */}\n//                 <DeleteIcon onClick={() => deleteProduct(product.id)} />\n//                 <EditIcon onClick={() => handleEditProduct(product.id)} />\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n//       {/* Conditionally render CheckoutPage based on isCartOpen */}\n//       {isCartOpen && (\n//         <CheckoutPage\n//           cartItems={cartItems}\n//           removeFromCart={removeFromCart}\n//           updateCartItem={updateCartItem}\n//         />\n//       )}\n//     </div>\n//   );\n// };\n\n// export default BodyPage1;\n\n// BodyPage1.js\nimport React, { useState, useEffect } from 'react';\nimport './BodyPage.css';\nimport Header from './header/header';\nimport CheckoutPage from './checkoutpage/checkoutpage';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport AddIcon from '@material-ui/icons/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BodyPage1 = () => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [products, setProducts] = useState([]);\n  const [isAddProductFormOpen, setIsAddProductFormOpen] = useState(false);\n  const [newProduct, setNewProduct] = useState({\n    name: '',\n    price: '',\n    imageUrl: ''\n  });\n  const [editableProductId, setEditableProductId] = useState(null); // State to track which product is being edited\n  const [editedProduct, setEditedProduct] = useState({\n    name: '',\n    price: '',\n    imageUrl: ''\n  });\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [selectedArtist, setSelectedArtist] = useState('');\n  const toggleCart = () => {\n    setIsCartOpen(prevState => !prevState);\n  };\n  const addProduct = () => {\n    setProducts([...products, {\n      ...newProduct,\n      id: products.length + 1\n    }]);\n    setIsAddProductFormOpen(false);\n    setNewProduct({\n      name: '',\n      price: '',\n      imageUrl: ''\n    });\n  };\n  const addToCart = product => {\n    const existingItemIndex = cartItems.findIndex(item => item.id === product.id);\n    if (existingItemIndex !== -1) {\n      const updatedCartItems = cartItems.map((item, index) => {\n        if (index === existingItemIndex) {\n          return {\n            ...item,\n            quantity: item.quantity + 1\n          };\n        }\n        return item;\n      });\n      setCartItems(updatedCartItems);\n    } else {\n      setCartItems([...cartItems, {\n        ...product,\n        quantity: 1\n      }]);\n    }\n  };\n  const removeFromCart = productId => {\n    const updatedCartItems = cartItems.filter(item => item.id !== productId);\n    setCartItems(updatedCartItems);\n  };\n  const updateCartItem = (productId, newQuantity) => {\n    const updatedCartItems = cartItems.map(item => {\n      if (item.id === productId) {\n        return {\n          ...item,\n          quantity: newQuantity\n        };\n      }\n      return item;\n    });\n    setCartItems(updatedCartItems);\n  };\n  // Fetch products by category\n  const fetchProductsByCategory = async category => {\n    try {\n      const response = await fetch(`http://127.0.0.1:8000/search_by_category?category=${category}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch products');\n      }\n      const data = await response.json();\n      setProducts(data);\n    } catch (error) {\n      console.error('Error fetching products:', error.message);\n    }\n  };\n\n  // Fetch products by artist\n  const fetchProductsByArtist = async artist => {\n    try {\n      const response = await fetch(`http://127.0.0.1:8000/search_by_artist?artist=${artist}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch products');\n      }\n      const data = await response.json();\n      setProducts(data);\n    } catch (error) {\n      console.error('Error fetching products:', error.message);\n    }\n  };\n  useEffect(() => {\n    // Fetch products when selected category changes\n    if (selectedCategory) {\n      fetchProductsByCategory(selectedCategory);\n    } else if (selectedArtist) {\n      fetchProductsByArtist(selectedArtist);\n    }\n  }, [selectedCategory, selectedArtist]);\n  const submitEditedProduct = () => {\n    const updatedProducts = products.map(product => {\n      if (product.id === editableProductId) {\n        return {\n          ...editedProduct\n        };\n      }\n      return product;\n    });\n    setProducts(updatedProducts);\n    setEditableProductId(null); // Reset editableProductId after updating the product\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      headName: \"SignOut\",\n      cartCount: cartItems.length,\n      toggleCart: toggleCart,\n      onCategoryChange: setSelectedCategory,\n      onArtistChange: setSelectedArtist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => setIsAddProductFormOpen(true),\n          children: [/*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Add Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), isAddProductFormOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-product-modal\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"add-product-modal-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"add-product-modal-close\",\n              onClick: () => setIsAddProductFormOpen(false),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Add Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: addProduct,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: newProduct.name,\n                onChange: e => setNewProduct({\n                  ...newProduct,\n                  name: e.target.value\n                }),\n                placeholder: \"Product Name\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: newProduct.price,\n                onChange: e => setNewProduct({\n                  ...newProduct,\n                  price: e.target.value\n                }),\n                placeholder: \"Price\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: newProduct.imageUrl,\n                onChange: e => setNewProduct({\n                  ...newProduct,\n                  imageUrl: e.target.value\n                }),\n                placeholder: \"Image URL\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Add Product\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: product.imageUrl,\n            alt: product.name,\n            className: \"product-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"product-info\",\n            children: [editableProductId === product.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: editedProduct.name,\n                onChange: e => setEditedProduct({\n                  ...editedProduct,\n                  name: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: editedProduct.price,\n                onChange: e => setEditedProduct({\n                  ...editedProduct,\n                  price: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: editedProduct.imageUrl,\n                onChange: e => setEditedProduct({\n                  ...editedProduct,\n                  imageUrl: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: submitEditedProduct,\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"product-name\",\n                children: product.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"product-price\",\n                children: product.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"add-to-cart-button\",\n              onClick: () => addToCart(product),\n              children: [/*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 19\n              }, this), \" Add to Cart\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DeleteIcon, {\n              onClick: () => deleteProduct(product.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(EditIcon, {\n              onClick: () => handleEditProduct(product.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this)]\n        }, product.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), isCartOpen && /*#__PURE__*/_jsxDEV(CheckoutPage, {\n      cartItems: cartItems,\n      removeFromCart: removeFromCart,\n      updateCartItem: updateCartItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 5\n  }, this);\n};\n_s(BodyPage1, \"qQpNJzfNok1iPVhtVEI42ZyYaNE=\");\n_c = BodyPage1;\nexport default BodyPage1;\nvar _c;\n$RefreshReg$(_c, \"BodyPage1\");","map":{"version":3,"names":["React","useState","useEffect","Header","CheckoutPage","DeleteIcon","EditIcon","AddIcon","jsxDEV","_jsxDEV","BodyPage1","_s","cartItems","setCartItems","isCartOpen","setIsCartOpen","products","setProducts","isAddProductFormOpen","setIsAddProductFormOpen","newProduct","setNewProduct","name","price","imageUrl","editableProductId","setEditableProductId","editedProduct","setEditedProduct","selectedCategory","setSelectedCategory","selectedArtist","setSelectedArtist","toggleCart","prevState","addProduct","id","length","addToCart","product","existingItemIndex","findIndex","item","updatedCartItems","map","index","quantity","removeFromCart","productId","filter","updateCartItem","newQuantity","fetchProductsByCategory","category","response","fetch","ok","Error","data","json","error","console","message","fetchProductsByArtist","artist","submitEditedProduct","updatedProducts","children","headName","cartCount","onCategoryChange","onArtistChange","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","onSubmit","type","value","onChange","e","target","placeholder","required","src","alt","deleteProduct","handleEditProduct","_c","$RefreshReg$"],"sources":["/Users/nithyashree/Desktop/ARTISAN/ArtisanClub/src/bodyadmin.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import './BodyPage.css';\n// import Header from './header/header';\n// import CheckoutPage from './checkoutpage/checkoutpage';\n// import DeleteIcon from '@material-ui/icons/Delete';\n// import EditIcon from '@material-ui/icons/Edit';\n// import AddIcon from '@material-ui/icons/Add';\n\n// const BodyPage1 = () => {\n//   const [cartItems, setCartItems] = useState([]);\n//   const [isCartOpen, setIsCartOpen] = useState(false);\n//   const [products, setProducts] = useState([\n//     { id: 1, name: 'Product 1', price: '$10', imageUrl: 'https://via.placeholder.com/150' },\n//     { id: 2, name: 'Product 2', price: '$20', imageUrl: 'https://via.placeholder.com/150' },\n//     { id: 3, name: 'Product 3', price: '$30', imageUrl: 'https://via.placeholder.com/150' },\n//     { id: 4, name: 'Product 4', price: '$40', imageUrl: 'https://via.placeholder.com/150' },\n//     { id: 5, name: 'Product 5', price: '$50', imageUrl: 'https://via.placeholder.com/150' },\n//     { id: 6, name: 'Product 6', price: '$60', imageUrl: 'https://via.placeholder.com/150' },\n//     { id: 7, name: 'Product 7', price: '$70', imageUrl: 'https://via.placeholder.com/150' },\n//     { id: 8, name: 'Product 8', price: '$80', imageUrl: 'https://via.placeholder.com/150' },\n//     { id: 9, name: 'Product 9', price: '$90', imageUrl: 'https://via.placeholder.com/150' },\n//     { id: 10, name: 'Product 10', price: '$100', imageUrl: 'https://via.placeholder.com/150' },\n//     { id: 11, name: 'Product 10', price: '$100', imageUrl: 'https://via.placeholder.com/150' },\n//     { id: 12, name: 'Product 10', price: '$100', imageUrl: 'https://via.placeholder.com/150' },\n//   ]);\n//   const [isAddProductFormOpen, setIsAddProductFormOpen] = useState(false);\n//   const [newProduct, setNewProduct] = useState({ name: '', price: '', imageUrl: '' });\n//   const [editableProductId, setEditableProductId] = useState(null); // State to track which product is being edited\n//   const [editedProduct, setEditedProduct] = useState({ name: '', price: '', imageUrl: '' });\n\n//   const addToCart = (product) => {\n//     const existingItemIndex = cartItems.findIndex(item => item.id === product.id);\n  \n//     if (existingItemIndex !== -1) {\n//       const updatedCartItems = cartItems.map((item, index) => {\n//         if (index === existingItemIndex) {\n//           return { ...item, quantity: item.quantity + 1 };\n//         }\n//         return item;\n//       });\n  \n//       setCartItems(updatedCartItems);\n//     } else {\n//       setCartItems([...cartItems, { ...product, quantity: 1 }]);\n//     }\n//   };\n\n//   const removeFromCart = (productId) => {\n//     const updatedCartItems = cartItems.filter(item => item.id !== productId);\n//     setCartItems(updatedCartItems);\n//   };\n\n//   const updateCartItem = (productId, newQuantity) => {\n//     const updatedCartItems = cartItems.map(item => {\n//       if (item.id === productId) {\n//         return { ...item, quantity: newQuantity };\n//       }\n//       return item;\n//     });\n//     setCartItems(updatedCartItems);\n//   };\n\n//   const toggleCart = () => {\n//     setIsCartOpen(prevState => !prevState);\n//   };\n\n//   const addProduct = () => {\n//     setProducts([...products, { ...newProduct, id: products.length + 1 }]);\n//     setIsAddProductFormOpen(false);\n//     setNewProduct({ Art_ID:' ',name: '', price: '', imageUrl: '' });\n//   };\n\n//   const deleteProduct = (productId) => {\n//     const updatedProducts = products.filter(product => product.id !== productId);\n//     setProducts(updatedProducts);\n//   };\n\n//   const handleEditProduct = (productId) => {\n//     setEditableProductId(productId);\n//     const productToEdit = products.find(product => product.id === productId);\n//     setEditedProduct({ ...productToEdit });\n//   };\n\n//   const submitEditedProduct = () => {\n//     const updatedProducts = products.map(product => {\n//       if (product.id === editableProductId) {\n//         return { ...editedProduct };\n//       }\n//       return product;\n//     });\n//     setProducts(updatedProducts);\n//     setEditableProductId(null); // Reset editableProductId after updating the product\n//   };\n\n//   return (\n//     <div>\n//       <Header headName=\"SignOut\" cartCount={cartItems.length} toggleCart={toggleCart} />\n//       <div className=\"body-page\">\n//         <div className=\"product-grid\">\n//           {/* Plus icon to toggle add product form */}\n//           <div onClick={() => setIsAddProductFormOpen(true)}>\n//             <AddIcon />\n//             <span>Add Product</span>\n//           </div>\n\n//           {/* Add product form */}\n//           {isAddProductFormOpen && (\n//             <div className=\"add-product-modal\">\n//               <div className=\"add-product-modal-content\">\n//                 <span className=\"add-product-modal-close\" onClick={() => setIsAddProductFormOpen(false)}>&times;</span>\n//                 <h2>Add Product</h2>\n//                 <form onSubmit={addProduct}>\n//                 <input type=\"text\" value={newProduct.Art_ID} onChange={(e) => setNewProduct({ ...newProduct, Art_ID: e.target.value })} placeholder=\"Artist ID\" required />\n//                   <input type=\"text\" value={newProduct.name} onChange={(e) => setNewProduct({ ...newProduct, name: e.target.value })} placeholder=\"Product Name\" required />\n//                   <input type=\"text\" value={newProduct.price} onChange={(e) => setNewProduct({ ...newProduct, price: e.target.value })} placeholder=\"Price\" required />\n//                   <input type=\"text\" value={newProduct.imageUrl} onChange={(e) => setNewProduct({ ...newProduct, imageUrl: e.target.value })} placeholder=\"Image URL\" required />\n//                   <button type=\"submit\">Add Product</button>\n//                 </form>\n//               </div>\n//             </div>\n//           )}\n\n//           {/* Display existing products */}\n//           {products.map(product => (\n//             <div key={product.id} className=\"product-card\">\n//               <img src={product.imageUrl} alt={product.name} className=\"product-image\" />\n//               <div className=\"product-info\">\n//                 {/* Editable fields */}\n//                 {editableProductId === product.id ? (\n//                   <div>\n//                     <input type=\"text\" value={editedProduct.name} onChange={(e) => setEditedProduct({ ...editedProduct, name: e.target.value })} />\n//                     <input type=\"text\" value={editedProduct.price} onChange={(e) => setEditedProduct({ ...editedProduct, price: e.target.value })} />\n//                     <input type=\"text\" value={editedProduct.imageUrl} onChange={(e) => setEditedProduct({ ...editedProduct, imageUrl: e.target.value })} />\n//                     <button onClick={submitEditedProduct}>Submit</button>\n//                   </div>\n//                 ) : (\n//                   <div>\n//                     <div className=\"product-name\">{product.name}</div>\n//                     <div className=\"product-price\">{product.price}</div>\n//                   </div>\n//                 )}\n//                 <button className=\"add-to-cart-button\" onClick={() => addToCart(product)}>\n//                   <AddIcon /> Add to Cart\n//                 </button>\n//                 {/* Admin functionalities */}\n//                 <DeleteIcon onClick={() => deleteProduct(product.id)} />\n//                 <EditIcon onClick={() => handleEditProduct(product.id)} />\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n//       {/* Conditionally render CheckoutPage based on isCartOpen */}\n//       {isCartOpen && (\n//         <CheckoutPage\n//           cartItems={cartItems}\n//           removeFromCart={removeFromCart}\n//           updateCartItem={updateCartItem}\n//         />\n//       )}\n//     </div>\n//   );\n// };\n\n// export default BodyPage1;\n\n\n// BodyPage1.js\nimport React, { useState, useEffect } from 'react';\nimport './BodyPage.css';\nimport Header from './header/header';\nimport CheckoutPage from './checkoutpage/checkoutpage';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst BodyPage1 = () => {\n  const [cartItems, setCartItems] = useState([]);\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [products, setProducts] = useState([]);\n  const [isAddProductFormOpen, setIsAddProductFormOpen] = useState(false);\n  const [newProduct, setNewProduct] = useState({ name: '', price: '', imageUrl: '' });\n  const [editableProductId, setEditableProductId] = useState(null); // State to track which product is being edited\n  const [editedProduct, setEditedProduct] = useState({ name: '', price: '', imageUrl: '' });\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [selectedArtist, setSelectedArtist] = useState('');\n\n  const toggleCart = () => {\n    setIsCartOpen(prevState => !prevState);\n  };\n\n  const addProduct = () => {\n    setProducts([...products, { ...newProduct, id: products.length + 1 }]);\n    setIsAddProductFormOpen(false);\n    setNewProduct({ name: '', price: '', imageUrl: '' });\n  };\n\n  const addToCart = (product) => {\n    const existingItemIndex = cartItems.findIndex(item => item.id === product.id);\n  \n    if (existingItemIndex !== -1) {\n      const updatedCartItems = cartItems.map((item, index) => {\n        if (index === existingItemIndex) {\n          return { ...item, quantity: item.quantity + 1 };\n        }\n        return item;\n      });\n  \n      setCartItems(updatedCartItems);\n    } else {\n      setCartItems([...cartItems, { ...product, quantity: 1 }]);\n    }\n  };\n\n  const removeFromCart = (productId) => {\n    const updatedCartItems = cartItems.filter(item => item.id !== productId);\n    setCartItems(updatedCartItems);\n  };\n\n  const updateCartItem = (productId, newQuantity) => {\n    const updatedCartItems = cartItems.map(item => {\n      if (item.id === productId) {\n        return { ...item, quantity: newQuantity };\n      }\n      return item;\n    });\n    setCartItems(updatedCartItems);\n  };\n  // Fetch products by category\n  const fetchProductsByCategory = async (category) => {\n    try {\n      const response = await fetch(`http://127.0.0.1:8000/search_by_category?category=${category}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch products');\n      }\n      const data = await response.json();\n      setProducts(data);\n    } catch (error) {\n      console.error('Error fetching products:', error.message);\n    }\n  };\n\n  // Fetch products by artist\n  const fetchProductsByArtist = async (artist) => {\n    try {\n      const response = await fetch(`http://127.0.0.1:8000/search_by_artist?artist=${artist}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch products');\n      }\n      const data = await response.json();\n      setProducts(data);\n    } catch (error) {\n      console.error('Error fetching products:', error.message);\n    }\n  };\n\n  useEffect(() => {\n    // Fetch products when selected category changes\n    if (selectedCategory) {\n      fetchProductsByCategory(selectedCategory);\n    } else if (selectedArtist) {\n      fetchProductsByArtist(selectedArtist);\n    }\n  }, [selectedCategory, selectedArtist]);\n  const submitEditedProduct = () => {\n    const updatedProducts = products.map(product => {\n      if (product.id === editableProductId) {\n        return { ...editedProduct };\n      }\n      return product;\n    });\n    setProducts(updatedProducts);\n    setEditableProductId(null); // Reset editableProductId after updating the product\n  };\n  return (\n    <div>\n      <Header\n        headName=\"SignOut\"\n        cartCount={cartItems.length}\n        toggleCart={toggleCart}\n        onCategoryChange={setSelectedCategory}\n        onArtistChange={setSelectedArtist}\n      />\n      <div className=\"body-page\">\n        <div className=\"product-grid\">\n          {/* Plus icon to toggle add product form */}\n          <div onClick={() => setIsAddProductFormOpen(true)}>\n            <AddIcon />\n            <span>Add Product</span>\n          </div>\n\n          {/* Add product form */}\n          {isAddProductFormOpen && (\n            <div className=\"add-product-modal\">\n              <div className=\"add-product-modal-content\">\n                <span className=\"add-product-modal-close\" onClick={() => setIsAddProductFormOpen(false)}>&times;</span>\n                <h2>Add Product</h2>\n                <form onSubmit={addProduct}>\n                  <input type=\"text\" value={newProduct.name} onChange={(e) => setNewProduct({ ...newProduct, name: e.target.value })} placeholder=\"Product Name\" required />\n                  <input type=\"text\" value={newProduct.price} onChange={(e) => setNewProduct({ ...newProduct, price: e.target.value })} placeholder=\"Price\" required />\n                  <input type=\"text\" value={newProduct.imageUrl} onChange={(e) => setNewProduct({ ...newProduct, imageUrl: e.target.value })} placeholder=\"Image URL\" required />\n                  <button type=\"submit\">Add Product</button>\n                </form>\n              </div>\n            </div>\n          )}\n\n          {/* Display existing products */}\n          {products.map(product => (\n            <div key={product.id} className=\"product-card\">\n              <img src={product.imageUrl} alt={product.name} className=\"product-image\" />\n              <div className=\"product-info\">\n                {/* Editable fields */}\n                {editableProductId === product.id ? (\n                  <div>\n                    <input type=\"text\" value={editedProduct.name} onChange={(e) => setEditedProduct({ ...editedProduct, name: e.target.value })} />\n                    <input type=\"text\" value={editedProduct.price} onChange={(e) => setEditedProduct({ ...editedProduct, price: e.target.value })} />\n                    <input type=\"text\" value={editedProduct.imageUrl} onChange={(e) => setEditedProduct({ ...editedProduct, imageUrl: e.target.value })} />\n                    <button onClick={submitEditedProduct}>Submit</button>\n                  </div>\n                ) : (\n                  <div>\n                    <div className=\"product-name\">{product.name}</div>\n                    <div className=\"product-price\">{product.price}</div>\n                  </div>\n                )}\n                <button className=\"add-to-cart-button\" onClick={() => addToCart(product)}>\n                  <AddIcon /> Add to Cart\n                </button>\n                {/* Admin functionalities */}\n                <DeleteIcon onClick={() => deleteProduct(product.id)} />\n                <EditIcon onClick={() => handleEditProduct(product.id)} />\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n      {/* Conditionally render CheckoutPage based on isCartOpen */}\n      {isCartOpen && (\n        <CheckoutPage\n          cartItems={cartItems}\n          removeFromCart={removeFromCart}\n          updateCartItem={updateCartItem}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default BodyPage1;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,gBAAgB;AACvB,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,YAAY,MAAM,6BAA6B;AACtD,OAAOC,UAAU,MAAM,2BAA2B;AAClD,OAAOC,QAAQ,MAAM,yBAAyB;AAC9C,OAAOC,OAAO,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACe,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}